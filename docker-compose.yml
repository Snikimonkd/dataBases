version: "3"

networks:
  front-tier:
  back-tier:

services:
  forum:
    environment: 
      DATABASE_URL: ${DATABASE_URL}
    image: forum
    ports:
      - "5000:5000"
    volumes:
      - ./static:/app/static
    networks:
      - back-tier
    build:
      context: .
      dockerfile: ./build/forum.Dockerfile

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./build/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    networks:
      - back-tier
    restart: always

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - back-tier
    restart: always
    deploy:
      mode: global

  grafana:
    environment: 
      GF_SERVER_HTTP_PORT: ${GF_SERVER_HTTP_PORT}
      GF_SERVER_DOMAIN: ${GF_SERVER_DOMAIN}
    image: grafana/grafana:master
    depends_on:
      - prometheus
    ports:
      - 3001:3001
    networks:
      - back-tier
      - front-tier
    restart: always


volumes:
  prometheus_data: { }
  grafana_data: { }
  database_data:
    driver: local